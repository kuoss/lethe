name: ci
on:
  push:
    branches:
    - '**'
    tags:
    - 'v*.*.*'
  pull_request:
    branches:
    - 'main'
    - 'release-**'

jobs:

  go-fmt:
    name: go-fmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Jerome1337/gofmt-action@v1.0.5
      with:
        gofmt-path: '.'
        gofmt-flags: '-l -d'

  go-vet:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v4
    - uses: actions/checkout@v3
    - run: go vet ./...

  go-staticcheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: go staticcheck
      uses: dominikh/staticcheck-action@v1.3.0
      with:
        version: "2022.1.3"
        install-go: false
        cache-key: 1.18

  golangci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3

  go-test-failfast:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v4
    - uses: actions/checkout@v3
    - name: go test failfast
      run: go test ./... -v -failfast

  go-test-coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v4
    - uses: actions/checkout@v3
    - name: go test with coverage
      #run: go test -v -covermode=count -coverprofile=coverage.out
      run: go test -race -coverprofile=coverage.out -covermode=atomic
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
    - name: Convert coverage to lcov
      uses: jandelgado/gcov2lcov-action@v1
    #- name: Coveralls 
    #  uses: coverallsapp/github-action@master
    #  with:
    #    github-token: ${{ secrets.GITHUB_TOKEN }}
    #    path-to-lcov: coverage.lcov
    - name: Coverage Gate
      uses: VeryGoodOpenSource/very_good_coverage@v2
      with:
        path: coverage.lcov
        min_coverage: 55

  go-licenses:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v4
    - uses: actions/checkout@v3
    - run: go install github.com/google/go-licenses@v1.5.0    
    - run: go-licenses check .

  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=tag
          type=ref,event=pr
          type=sha
    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
