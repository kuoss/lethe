name: ci
on:
  push:
    branches:
    - "**"
  pull_request:
    branches:
    - "main"
    - "develop"

jobs:
  size-label:
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
    - name: size-label
      uses: "pascalgn/size-label-action@v0.4.3"
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        
  go-licenses:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: 1.18
    - run: go install github.com/google/go-licenses@v1.5.0
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - run: go-licenses check .
    
  go-vet:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: 1.18
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - run: go vet ./...

  go-staticcheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: go staticcheck
      uses: dominikh/staticcheck-action@v1.3.0
      with:
        version: "2022.1.3"
        install-go: false
        cache-key: 1.18
        
  go-fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - uses: Jerome1337/gofmt-action@v1.0.5
      with:
        gofmt-path: '.'
        gofmt-flags: '-l -d'

  go-test-failfast:
    runs-on: ubuntu-latest
    steps:
    - name: Setup go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
    - name: Checkout code
      uses: actions/checkout@v3
    - name: go test failfast
      run: go test ./... -v -failfast

  go-test-coverage:
    runs-on: ubuntu-latest
    steps:
    - name: Setup go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
    - name: Checkout code
      uses: actions/checkout@v3
    - name: go test with coverage
      run: go test ./... -v -coverprofile=coverage.out
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
    - name: Convert coverage to lcov
      uses: jandelgado/gcov2lcov-action@v1
    - name: Coveralls 
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: coverage.lcov
    - name: Coverage Gate
      uses: VeryGoodOpenSource/very_good_coverage@v2
      with:
        path: coverage.lcov
        min_coverage: 50

  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
 
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
