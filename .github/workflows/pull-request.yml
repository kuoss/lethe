name: pull-request
on:
  pull_request:
    types: [opened, reopend, synchronize]
permissions:
  contents: read
  pull-requests: write

jobs:
  code-review:
    runs-on: ubuntu-latest
    steps:
    - uses: anc95/ChatGPT-CodeReview@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LANGUAGE: Korean

  go-fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Jerome1337/gofmt-action@v1.0.5
      with:
        gofmt-path: '.'
        gofmt-flags: '-l -d'

  go-vet:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v4
    - uses: actions/checkout@v3
    - run: go vet ./...

  go-staticcheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dominikh/staticcheck-action@v1.3.0
      with:
        version: "2022.1.3"

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          args: --timeout 5m

  go-test-failfast:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v4
    - uses: actions/checkout@v3
    - name: go test failfast
      run: go test ./... -v -failfast

  # https://about.codecov.io/blog/getting-started-with-code-coverage-for-golang/
  go-test-coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v4
    - uses: actions/checkout@v3
    - name: go test with coverage
      run: go test ./... -race -coverprofile=coverage.out -covermode=atomic
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3

  go-licenses:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v4
    - uses: actions/checkout@v3
    - run: go install github.com/google/go-licenses@v1.6.0    
    - run: go-licenses check .

  docker-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=pr

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
